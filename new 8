//
// ContentView.swift
// Pendientes
//
// Created by ..........

import SwiftUI

struct ContentView: View {
	
	@State private var newTodo = ""
	@State private var allTodos: [TodoItem] = []
	private let todokey = "todoskey"

	var body: some View {
		NavigationView {
			VStack {
			
				HStack {
					TextField("Agregar pendiente...", text: $newTodo //BindingString
					.textFieldStyle (roundedBorderTextFieldStyle()
				
					Button(action: {
						guard !self.newTodo.isEmpty else {return} //asegurar que el texto no esté vacío
						self.allTodos.append(TodoItem(todo: self.newTodo))
						self.newTodo = ""
						self.saveTodos()
					}) {
						Image(systemName: "plus")
					}.padding(.leading, 5)
					
				}.padding()
				
				List {
					ForEach(allTodos) { todoItem in
						Text(todoItem.todo
					}
				}.onDelete(perform: deleteTodos)
				
			}.navigationBarTitle("Pendientes")
		}.onAppear(perform: loadTodos)
	}
	
	private func saveTodos(){
		UserDefaults.standard.set(try? PropertyListEncoder().encode(self.allTodos), forkey: todoskey)
	}
	
	private fun loadTodos(){
		if let todosData = UserDefaults.standard.value(forkey: todoskey) as? Data {
			if let todosList = try? PropertyListDecoder().decode(Array<TodoItem>.self, from: todosData){
				self.allTodos = todosList
			}
		}
	}
	
	private fun deleteTodos(at offset: IndexSet){
		self.allTodos.remove(atOffsets: offset)
		saveTodos()
	}
}
 
struct TodoItem: Codable, Identifiable {
	
	let id = UUID()
	let todo: String
	
}
 
 
 struct ContentView_Preview: PreviewProvider {
	static var preview: some View {
		ContentView()
	}
 }